document.addEventListener('DOMContentLoaded', initializeApp);

// --- DATABASE & ICONS (Full & Detailed Version) ---
const quizData = {
    'islamic_civilization': {
        name: "مدخل إلى تاريخ الحضارة الإسلامية",
        icon: '<i class="fas fa-mosque"></i>', // Font Awesome icon
        modules: {
            'module1_civ': {
                name: "الموقع والمضايق",
                icon: '<i class="fas fa-globe-americas"></i>',
                questions: [
                    { type: 'mcq', question: "لماذا ازدادت أهمية موقع العالم الإسلامي بعد اكتشاف البترول؟", options: ["لأنه يستهلك كل البترول", "لأنه يساهم بحصة كبيرة من الإنتاج والاحتياطي العالمي", "لأنه يقع قرب أوروبا"], answer: "لأنه يساهم بحصة كبيرة من الإنتاج والاحتياطي العالمي", explanation: "زادت أهمية العالم الإسلامي بعد اكتشاف البترول على أراضيه، حيث يساهم بنسبة كبيرة من الإنتاج والاحتياطي العالمي للبترول." },
                    { type: 'fill', question: "مضيق ______ يقع بين إيران وسلطنة عمان ويربط الخليج العربي بالمحيط الهندي.", answer: "هرمز", explanation: "مضيق هرمز يقع بين إيران وسلطنة عمان، ويربط الخليج العربي ببحر عمان ثم المحيط الهندي. يُعد من أخطر المضايق لأهميته في نقل النفط." },
                    { type: 'mcq', question: "ما هو الممر المائي الذي يربط البحر الأحمر بالبحر المتوسط عبر مصر؟", options: ["مضيق باب المندب", "قناة السويس", "مضيق البوسفور"], answer: "قناة السويس", explanation: "قناة السويس هي ممر مائي صناعي يربط البحر المتوسط بالبحر الأحمر عبر مصر، وتعتبر من أهم الطرق التجارية عالمياً لأنها تختصر الوقت بين أوروبا وآسيا." },
                    { type: 'fill', question: "يربط مضيق باب المندب بين البحر الأحمر و______.", answer: "خليج عدن", explanation: "يقع مضيق باب المندب بين اليمن وجيبوتي ويربط بين البحر الأحمر وخليج عدن، ومنه إلى المحيط الهندي، وهو شريان مهم للتجارة بين أوروبا وآسيا." }
                ]
            },
            'module2_civ': {
                name: "الركائز والمميزات",
                icon: '<i class="fas fa-handshake"></i>',
                questions: [
                    { type: 'mcq', question: "ما هي السمة الأساسية التي تميز الحضارة الإسلامية بكونها 'حضارة ربانية'؟", options: ["أنها نشأت في الصحراء", "أنها جاءت وتطورت بعد نزول الوحي", "أنها اهتمت بالتجارة فقط"], answer: "أنها جاءت وتطورت بعد نزول الوحي", explanation: "تعتبر الحضارة الإسلامية حضارة ربانية لأنها جاءت وتطورت بعد نزول الوحي على الرسول صلى الله عليه وسلم، وتستمد مبادئها من مصدر إلهي." },
                    { type: 'fill', question: "حث الإسلام على تطبيق مبدأ ______ في جميع الأمور كركيزة أساسية للحكم.", answer: "الشورى", explanation: "الشورى هي إحدى ركائز الحضارة الإسلامية، حيث حث الإسلام على تطبيق هذا المبدأ في جميع الأمور السياسية والاجتماعية." },
                    { type: 'mcq', question: "لماذا توصف الحضارة الإسلامية بأنها 'حضارة إنسانية'؟", options: ["لأنها تقتصر على العرب", "لأنها تحترم جميع الشعوب دون تمييز", "لأنها تركز على الفرد فقط"], answer: "لأنها تحترم جميع الشعوب دون تمييز", explanation: "الحضارة الإسلامية حضارة إنسانية لأنها جاءت لتحترم جميع الشعوب ولا تقتصر على جنس أو إقليم جغرافي معين، وقضت على التفريق العنصري." },
                    { type: 'fill', question: "أكمل الحديث النبوي: 'اللهم إني أعوذ بك من العجز و ______'.", answer: "الكسل", explanation: "العمل هو ركيزة أساسية في بناء الحضارة، وقد حث الإسلام على النشاط وعمارة الأرض، وكان الرسول ﷺ يتعوذ من العجز والكسل." }
                ]
            },
            'module3_civ': {
                name: "مصادر التاريخ الإسلامي",
                icon: '<i class="fas fa-scroll"></i>',
                questions: [
                    { type: 'mcq', question: "ما هي أقدم أنواع المصادر التاريخية الإسلامية التي تربط بين الحديث والتاريخ؟", options: ["كتب الفتوح", "كتب الأنساب", "كتب السير والمغازي"], answer: "كتب السير والمغازي", explanation: "كتب السير والمغازي هي من أقدم المصادر التاريخية الإسلامية، حيث تربط بين الحديث النبوي والتاريخ، وتركز على سيرة النبي محمد وغزواته." },
                    { type: 'fill', question: "الكتب التي تهتم بتوثيق حياة الأشخاص بشكل مفصل تسمى كتب ______.", answer: "التراجم", explanation: "كتب التراجم تهتم بتوثيق حياة الأشخاص بشكل مفصل، مع الإشارة إلى الظروف الزمنية والثقافية للمترجمين، بهدف رسم صورة دقيقة للشخصية." },
                    { type: 'mcq', question: "ماذا تسمى الكتب التي توثق مرحلة التوسع الإسلامي بعد وفاة النبي ﷺ؟", options: ["كتب المناقب", "كتب الفتوح", "كتب الطبقات"], answer: "كتب الفتوح", explanation: "كتب الفتوح هي المصادر التي تكمل كتب المغازي، وتهتم بتوثيق مرحلة التوسع الإسلامي في العصرين الراشدي والأموي، وتتضمن معلومات عن القادة والقبائل والعهود." },
                    { type: 'mcq', question: "ماذا تسمى القضايا التي تعرض على القضاة والفقهاء وتعتبر مصدراً تاريخياً للحياة الاجتماعية؟", options: ["الأنساب", "المناقب", "النوازل"], answer: "النوازل", explanation: "كتب النوازل تتناول القضايا التي تعرض على القضاء والفقهاء، وتعتبر مصدراً واقعياً ومباشراً لفهم الحياة الاجتماعية والاقتصادية في المجتمعات الإسلامية." }
                ]
            },
            'module4_civ': {
                name: "حواضر المشرق والأندلس",
                icon: '<i class="fas fa-city"></i>',
                questions: [
                    { type: 'mcq', question: "من هو الخليفة العباسي الذي أسس مدينة بغداد وجعلها عاصمة للخلافة؟", options: ["هارون الرشيد", "المأمون", "أبو جعفر المنصور"], answer: "أبو جعفر المنصور", explanation: "أسس الخليفة أبو جعفر المنصور مدينة بغداد في العهد العباسي، وجعلها عاصمة للخلافة. وقد بلغت أوج ازدهارها في زمن هارون الرشيد." },
                    { type: 'fill', question: "أسس جوهر الصقلي مدينة ______ في عهد المعز لدين الله الفاطمي.", answer: "القاهرة", explanation: "أسس القائد جوهر الصقلي مدينة القاهرة في عهد الخليفة المعز لدين الله الفاطمي، لتصبح عاصمة الدولة الفاطمية في مصر، وازدهرت في عهود لاحقة." },
                    { type: 'mcq', question: "من هو القائد الذي جعل قرطبة عاصمة للأمويين في الأندلس؟", options: ["طارق بن زياد", "عبد الرحمن الداخل", "يوسف بن تاشفين"], answer: "عبد الرحمن الداخل", explanation: "جعل عبد الرحمن الداخل (صقر قريش) مدينة قرطبة عاصمة للدولة الأموية في الأندلس، فشهدت ازدهاراً كبيراً في مختلف المجالات." },
                    { type: 'fill', question: "أصبحت مدينة ______ مركزا لنقل العلوم والثقافة الإسلامية إلى أوروبا بعد فتحها على يد طارق بن زياد.", answer: "طليطلة", explanation: "فتح المسلمون طليطلة بقيادة طارق بن زياد، وأصبحت المدينة مركزاً مهماً لنقل وترجمة العلوم والثقافة الإسلامية إلى أوروبا." }
                ]
            },
            'module5_civ': {
                name: "الأسواق عند العرب",
                icon: '<i class="fas fa-store"></i>',
                questions: [
                    { type: 'mcq', question: "إلى جانب التجارة، ما هو الدور الآخر المهم الذي لعبته الأسواق مثل سوق عكاظ؟", options: ["مركز عسكري فقط", "ملتقى أدبي للشعراء", "مكان للزراعة"], answer: "ملتقى أدبي للشعراء", explanation: "لم تقتصر الأسواق على بيع السلع فقط، بل كانت ملتقى أدبياً يتبارى فيه الشعراء ويتفاخرون، مع وجود حكام يفصلون في المنافسات." },
                    { type: 'mcq', question: "ما هو أشهر سوق في الجاهلية والإسلام، وكان يقام بين مكة والطائف؟", options: ["سوق مجنة", "سوق ذي المجاز", "سوق عكاظ"], answer: "سوق عكاظ", explanation: "سوق عكاظ هو أشهر سوق في الجاهلية والإسلام، كان يقام بين مكة والطائف من أول إلى 20 ذي القعدة، ويشتهر بالمنافسات الأدبية والتجارة الواسعة." },
                    { type: 'fill', question: "سوق ______ بالبصرة، بدأ كسوق للإبل ثم أصبح مكاناً للمجالس والحلقات الأدبية في العهد الأموي.", answer: "المربد", explanation: "يقع سوق المربد في البصرة، وكان في البداية سوقاً للإبل، ثم تحول في العهد الأموي إلى مكان عام للمجالس والحلقات الأدبية يرتاده الشعراء والأشراف." }
                ]
            }
        }
    },
    'documentary_research': {
        name: "البحث الوثائقي",
        icon: '<i class="fas fa-search"></i>',
        modules: {
            'module1_res': {
                name: "المصادر وأنواعها",
                icon: '<i class="fas fa-layer-group"></i>',
                questions: [
                    { type: 'mcq', question: "ماذا تُسمى المصادر الأصلية التي لم تُحلل أو تُفسر من قبل باحثين آخرين؟", options: ["مصادر ثانوية", "مصادر ثلاثية", "مصادر أولية"], answer: "مصادر أولية", explanation: "المصادر الأولية (Primary Sources) هي المصادر الأصلية التي تُعد المادة الخام للبحث العلمي، مثل الوثائق الرسمية، المخطوطات، الصور، والإحصاءات." },
                    { type: 'fill', question: "الكتب والمقالات العلمية التي تحلل الدراسات الأولية تعتبر مصادر ______.", answer: "ثانوية", explanation: "المصادر الثانوية (Secondary Sources) هي التي تشرح أو تحلل أو تفسر المصادر الأولية. يستخدمها الباحث لفهم السياق أو بناء الإطار النظري." },
                    { type: 'mcq', question: "ما هو الهدف الرئيسي من استخدام المصادر الثلاثية مثل الموسوعات والمعاجم؟", options: ["تحليل نقدي عميق", "تقديم بيانات خام", "تنظيم وتلخيص المعلومات"], answer: "تنظيم وتلخيص المعلومات", explanation: "المصادر الثلاثية (Tertiary Sources) تُستخدم لتنظيم وتلخيص المعلومات من المصادر الأولية والثانوية، وهي مفيدة للبحث التمهيدي، مثل الموسوعات والقواميس والببليوغرافيات." },
                    { type: 'mcq', question: "أي مما يلي يُعتبر من أشكال المصادر الحديثة (بعد الورقية)؟", options: ["البرديات", "الأطالس والكتب", "قواعد البيانات والمواقع الإلكترونية"], answer: "قواعد البيانات والمواقع الإلكترونية", explanation: "المصادر الحديثة (بعد الورقية) تشمل الأشكال الإلكترونية مثل الأفلام، التسجيلات، قواعد البيانات، والمواقع الإلكترونية." }
                ]
            },
            'module2_res': {
                name: "مراحل وأدوات البحث",
                icon: '<i class="fas fa-tools"></i>',
                questions: [
                    { type: 'mcq', question: "ما هي أول مرحلة من مراحل إعداد البحث الوثائقي؟", options: ["جمع المصادر", "اختيار الموضوع وتحديد الإشكالية", "توثيق المراجع"], answer: "اختيار الموضوع وتحديد الإشكالية", explanation: "أولى مراحل إعداد البحث الوثائقي هي اختيار موضوع محدد وواقعي ومناسب، ثم تحديد الإشكالية أو السؤال البحثي الذي سيتم الإجابة عنه." },
                    { type: 'fill', question: "أداة مثل ______ تساعد الباحث على تحديد محاور بحثه عبر طرح أسئلة (من، ماذا، متى، كيف، لماذا).", answer: "3QCPO", explanation: "تُستخدم طريقة 3QCPO كأداة فعالة لتحليل واختيار الموضوع وتحديد محاوره الأساسية عبر طرح الأسئلة الخمسة الرئيسية." },
                    { type: 'mcq', question: "أي مما يلي يُعتبر من أدوات مساعدة لتنظيم المراجع ومنع التشتت؟", options: ["Google Scholar", "Zotero أو Mendeley", "Microsoft Word"], answer: "Zotero أو Mendeley", explanation: "تعتبر أدوات مثل Zotero, Mendeley, و EndNote أدوات متخصصة تساعد في حفظ وتنظيم المراجع وإدراجها تلقائيًا في البحث حسب نظام التوثيق المعتمد." },
                     { type: 'mcq', question: "عند تقييم مصدر إلكتروني، أي سؤال يعتبر الأكثر أهمية للتحقق من المصداقية؟", options: ["هل تصميم الموقع جميل؟", "من هو المؤلف وهل هو مختص في المجال؟", "هل يحتوي الموقع على إعلانات؟"], answer: "من هو المؤلف وهل هو مختص في المجال؟", explanation: "لتقييم مصداقية مصدر إلكتروني، من أهم الأسئلة التي يجب طرحها: من هو المؤلف؟ هل هو مختص؟ من هي الجهة الناشرة؟ وهل المحتوى محكّم؟" }
                ]
            },
            'module3_res': {
                name: "التوثيق والاقتباس",
                icon: '<i class="fas fa-file-alt"></i>',
                questions: [
                    { type: 'mcq', question: "ما هو الفرق بين الاقتباس المباشر وغير المباشر؟", options: ["المباشر قصير وغير المباشر طويل", "المباشر نقل حرفي للنص، وغير المباشر إعادة صياغة للفكرة", "المباشر يوضع في الهامش وغير المباشر في النص"], answer: "المباشر نقل حرفي للنص، وغير المباشر إعادة صياغة للفكرة", explanation: "الاقتباس المباشر (الحرفي) هو نقل النص كما هو بين علامتي تنصيص، أما الاقتباس غير المباشر (التلخيصي) فيعتمد على إعادة صياغة الفكرة بأسلوب الباحث الخاص." },
                    { type: 'fill', question: "في نظام التوثيق APA، الاقتباس الذي يتجاوز ______ كلمة يُكتب في فقرة مستقلة.", answer: "40", explanation: "حسب نظام APA، الاقتباس القصير هو ما يقل عن 40 كلمة ويوضع داخل الفقرة، أما الاقتباس الطويل (أكثر من 40 كلمة) فيُكتب في فقرة مستقلة ومنفصلة." },
                    { type: 'mcq', question: "ماذا يعني 'الاقتباس الثانوي'؟", options: ["اقتباس من مصدر غير مهم", "اقتباس من مصدرين في نفس الوقت", "النقل من مصدر وسيط استشهد بالمصدر الأصلي"], answer: "النقل من مصدر وسيط استشهد بالمصدر الأصلي", explanation: "الاقتباس الثانوي هو النقل من مصدر ناقل (وسيط) استشهد بالمصدر الأصلي، ويُستخدم عند صعوبة الوصول للمصدر الأولي." },
                    { type: 'mcq', question: "ما هو أهم ضابط من ضوابط الاقتباس لضمان الأمانة العلمية؟", options: ["أن يكون الاقتباس قصيراً", "النقل دون تحريف وتحديد المصدر بدقة", "أن يكون الاقتباس من كتاب مشهور"], answer: "النقل دون تحريف وتحديد المصدر بدقة", explanation: "من أهم ضوابط الاقتباس: الأمانة العلمية (النقل دون تحريف)، الاعتدال، وضعه في سياق مناسب، وتحديد مصدره بدقة حسب نظام التوثيق المعتمد." }
                ]
            },
            'module4_res': {
                name: "مهارات البحث الإلكتروني",
                icon: '<i class="fas fa-globe"></i>',
                questions: [
                    { type: 'mcq', question: "ما هي وظيفة أمر البحث المتقدم 'site:' في محركات البحث؟", options: ["البحث عن نوع ملف معين", "البحث داخل موقع معين فقط", "البحث عن كلمة في العنوان"], answer: "البحث داخل موقع معين فقط", explanation: "يُستخدم أمر البحث المتقدم 'site:' لتضييق نطاق البحث وحصره داخل موقع إلكتروني معين. مثال: site:jstor.org التاريخ الإسلامي." },
                    { type: 'fill', question: "للبحث عن عبارة محددة بنفس ترتيب الكلمات، نضع العبارة بين ______.", answer: "علامتي تنصيص", explanation: "عند وضع عبارة بين علامتي تنصيص \"...\"، يقوم محرك البحث بالبحث عن هذه الكلمات بنفس الترتيب تماماً، مما يعطي نتائج أكثر دقة." },
                    { type: 'mcq', question: "ما هي وظيفة المشغل المنطقي 'OR' في البحث؟", options: ["الجمع بين كلمتين معاً", "استبعاد كلمة من البحث", "البحث عن أحد المصطلحين أو كليهما"], answer: "البحث عن أحد المصطلحين أو كليهما", explanation: "المشغل المنطقي 'OR' (أو) يُستخدم للبحث عن أحد المصطلحين أو كليهما (إما هذا أو ذاك)، مما يوسع نطاق البحث. مثال: \"الإعلام الرقمي\" OR \"مواقع التواصل الاجتماعي\"." },
                    { type: 'fill', question: "للبحث عن ملفات من نوع PDF فقط، نستخدم أمر البحث ______.", answer: "filetype:pdf", explanation: "أمر البحث المتقدم 'filetype:' يسمح بتحديد نوع الملفات التي تبحث عنها، مثل filetype:pdf للبحث عن ملفات PDF فقط." }
                ]
            }
        }
    },
    'libraries_management': {
        name: "أساسيات علوم المكتبات والتوثيق",
        icon: '<i class="fas fa-book-open"></i>',
        modules: {
            'module1_lib': {
                name: "تنظيم وتسيير المؤسسات",
                icon: '<i class="fas fa-sitemap"></i>',
                questions: [
                    { type: 'mcq', question: "ما هو الهدف الرئيسي من 'تنظيم' المؤسسة الوثائقية؟", options: ["زيادة عدد الموظفين", "تقسيم الأنشطة لوحدات وتحديد المسؤوليات", "شراء المزيد من الكتب"], answer: "تقسيم الأنشطة لوحدات وتحديد المسؤوليات", explanation: "التنظيم هو تقسيم أنشطة المكتبة إلى وحدات متخصصة، مع تحديد المسؤوليات لكل وحدة، وذلك بهدف تسهيل التنسيق والإشراف وتحقيق الأهداف." },
                    { type: 'fill', question: "ظهرت المدرسة ______ كرد فعل على المدرسة الكلاسيكية وركزت على العلاقات الإنسانية.", answer: "السلوكية", explanation: "ظهرت المدرسة السلوكية كرد فعل على المدرسة الكلاسيكية التي كانت تركز على الجانب المادي فقط، بينما اهتمت المدرسة السلوكية بالعلاقات الإنسانية ودراسة سلوك الأفراد داخل بيئة العمل." },
                    { type: 'mcq', question: "من هو مؤسس مدرسة 'الإدارة العلمية' التي ركزت على تقسيم العمل والتخصص؟", options: ["هنري فايول", "ماكس ويبر", "فريديريك تايلور"], answer: "فريديريك تايلور", explanation: "أسس فريديريك تايلور مدرسة الإدارة العلمية، والتي ركزت على استخدام الأسلوب العلمي في الإدارة من خلال تقسيم العمل، التخصص، والبحث عن الطريقة المثلى للعمل." },
                    { type: 'fill', question: "المدرسة ______ ترى أنه لا توجد نظرية واحدة تصلح لكل زمان ومكان، بل يجب اختيار المنهج حسب ظروف المؤسسة.", answer: "الظرفية", explanation: "ترى المدرسة الظرفية أنه لا توجد نظرية إدارية واحدة مثالية، بل يجب اختيار المنهج الإداري المناسب حسب طبيعة المؤسسة، بيئتها، التحديات التكنولوجية، والمرحلة التي تمر بها." }
                ]
            },
            'module2_lib': {
                name: "السلسلة الوثائقية",
                icon: '<i class="fas fa-stream"></i>',
                questions: [
                    { type: 'mcq', question: "ما هي أول مرحلة في عملية التوثيق ضمن السلسلة الوثائقية؟", options: ["التخزين", "التزويد", "الاسترجاع"], answer: "التزويد", explanation: "أولى مراحل عملية التوثيق هي التزويد، والتي تعني اختيار واقتناء مصادر المعلومات المناسبة لاحتياجات المستفيدين." },
                    { type: 'fill', question: "وصف محتوى الوثيقة بمصطلحات دقيقة للتعبير عن موضوعها يسمى التحليل و ______.", answer: "التكشيف", explanation: "التحليل والتكشيف هما عمليتان تهدفان إلى تحديد موضوع الوثيقة والتعبير عنه بمصطلحات أو كلمات مفتاحية دقيقة لتسهيل استرجاعها لاحقاً." },
                    { type: 'mcq', question: "أي مما يلي يعتبر من أشكال التخزين الآلي للمعلومات؟", options: ["السجلات الورقية", "الميكروفيلم والأقراص", "الدفاتر"], answer: "الميكروفيلم والأقراص", explanation: "التخزين الآلي يعتمد على التكنولوجيا لحفظ المعلومات، ومن أشكاله الميكروفيلم، الأقراص المدمجة، وقواعد البيانات الإلكترونية، على عكس التخزين اليدوي الذي يعتمد على السجلات الورقية." }
                ]
            },
            'module3_lib': {
                name: "وظائف الإدارة",
                icon: '<i class="fas fa-user-tie"></i>',
                questions: [
                    { type: 'mcq', question: "أي قسم في المكتبة مسؤول عن اختيار الكتب، الفهرسة، التصنيف، والترميم؟", options: ["قسم الإدارة العامة", "قسم الخدمة المكتبية", "قسم الإجراءات الفنية"], answer: "قسم الإجراءات الفنية", explanation: "قسم الإجراءات الفنية هو المسؤول عن العمليات الداخلية التي تجهز المواد لتكون متاحة للقراء، وتشمل الاختيار، الفهرسة، التصنيف، الترميم، والتصوير." },
                    { type: 'fill', question: "الوظيفة الأساسية لـ ______ هي تجميع وفهرسة المواد وتنظيم الفعاليات وتثقيف المستفيدين.", answer: "أمين المكتبة", explanation: "أمين المكتبة هو المسؤول الرئيسي عن إدارة المكتبة، وتشمل مهامه جمع وفهرسة المواد، تنظيم الفعاليات الثقافية، تقديم الدعم للمستفيدين وتثقيفهم." },
                    { type: 'mcq', question: "ماذا يُقصد بوظيفة 'تنظيم الوسائط' في دور الوثائق (المحفوظات)؟", options: ["شراء وثائق جديدة", "تصنيف وتأمين المواد المحفوظة", "إعارة الوثائق للخارج"], answer: "تصنيف وتأمين المواد المحفوظة", explanation: "وظيفة تنظيم الوسائط في دور الوثائق (الأرشيف) تعني تصنيف المواد المحفوظة حسب خطة محددة وتأمينها في بيئة مناسبة للحفاظ عليها من التلف." }
                ]
            },
            'module4_lib': {
                name: "الإدارة الإلكترونية ووصف الوثائق",
                icon: '<i class="fas fa-laptop-code"></i>',
                questions: [
                    { type: 'mcq', question: "ما هو الهدف الرئيسي من التحول إلى الإدارة الإلكترونية في المؤسسات الوثائقية؟", options: ["زيادة استخدام الورق", "استخدام تكنولوجيا المعلومات لإنجاز العمليات آلياً", "تقليل عدد الموظفين"], answer: "استخدام تكنولوجيا المعلومات لإنجاز العمليات آلياً", explanation: "الإدارة الإلكترونية تعني استخدام تكنولوجيا المعلومات والاتصالات في إنجاز العمليات والخدمات الإدارية بشكل آلي ومنظم، بهدف تحسين الأداء وسرعة إيصال المعلومات." },
                    { type: 'mcq', question: "ماذا يمثل 'المستوى الثالث' في مستويات وصف الوثائق؟", options: ["الحد الأدنى من البيانات الأساسية", "بيانات أكثر تفصيلاً", "كافة البيانات المقررة حسب القواعد الرسمية"], answer: "كافة البيانات المقررة حسب القواعد الرسمية", explanation: "المستوى الثالث لوصف الوثائق هو المستوى الأكثر تفصيلاً، حيث يشمل كافة البيانات المقررة حسب القواعد الرسمية والمعايير المتبعة في عملية الوصف." },
                    { type: 'fill', question: "من فوائد الإدارة الإلكترونية ______ الحاجة إلى التخزين الورقي وحفظ البيانات من الكوارث.", answer: "تقليل", explanation: "من الفوائد المهمة للإدارة الإلكترونية أنها تقلل الحاجة إلى المساحات المخصصة للتخزين الورقي، كما تسهل عملية حفظ البيانات وحمايتها من الكوارث من خلال النسخ الاحتياطي الرقمي." },
                     { type: 'fill', question: "عملية تحليل محتوى الوثيقة لتحديد معلوماتها الرئيسية مثل المؤلف والموضوع تسمى ______ الوثائق.", answer: "وصف", explanation: "وصف الوثائق هو تحليل دقيق لمحتوى الوثيقة بهدف تحديد معلوماتها الرئيسية مثل الموضوع، المؤلف، تاريخ النشر، اللغة، والكلمات المفتاحية." }
                ]
            }
        }
    },
    'scientific_research_methodology': {
        name: "منهجية البحث العلمي",
        icon: '<i class="fas fa-flask"></i>',
        modules: {
            'module1_method': {
                name: "مناهج البحث (وصفي وتاريخي)",
                icon: '<i class="fas fa-chart-bar"></i>',
                questions: [
                    { type: 'mcq', question: "ما هو الهدف الرئيسي للمنهج الوصفي في البحث العلمي؟", options: ["إجراء تجارب عملية", "وصف الظواهر وتصويرها كمياً وكيفياً", "إعادة بناء الماضي"], answer: "وصف الظواهر وتصويرها كمياً وكيفياً", explanation: "المنهج الوصفي هو طريقة لوصف الظواهر المدروسة وتصويرها كمياً عن طريق جمع معلومات مقننة عن المشكلة وتصنيفها وتحليلها وإخضاعها للدراسة الدقيقة." },
                    { type: 'fill', question: "الدراسات التي تقوم على توضيح العلاقات بين متغيرات الدراسة وتحديد درجة الارتباط بينها تسمى الدراسات ______.", answer: "الارتباطية", explanation: "الدراسات الارتباطية هي نوع من الدراسات الوصفية، وتقوم على توضيح العلاقات بين متغيرات الدراسة بهدف تحديد درجة الارتباط بينها وعرضها بطريقة رقمية." },
                    { type: 'mcq', question: "ما هو الهدف الأساسي لمنهج البحث التاريخي؟", options: ["التنبؤ بالمستقبل فقط", "فهم الحاضر والتنبؤ بالمستقبل عبر دراسة الماضي", "وصف الظواهر الحالية"], answer: "فهم الحاضر والتنبؤ بالمستقبل عبر دراسة الماضي", explanation: "منهج البحث التاريخي هو إعادة الماضي عبر جمع الأدلة وتقويمها بهدف فهم الحاضر على ضوء الماضي والتنبؤ بالمستقبل." },
                    { type: 'mcq', question: "القرآن الكريم وتاريخ ابن خلدون يعتبران من أي نوع من مصادر البحث التاريخي؟", options: ["مصادر ثانوية", "مصادر أولية", "مصادر شفوية"], answer: "مصادر أولية", explanation: "المصادر الأولية في البحث التاريخي تتمثل في السجلات والوثائق والآثار الأصلية، ويُعتبر القرآن الكريم وتاريخ ابن خلدون والرحلات من الأمثلة على المصادر الأولية." },
                    { type: 'fill', question: "النقد ______ في المنهج التاريخي يرتبط بشكل الوثيقة وعنوانها والتأكد من ارتباطها بعصرها.", answer: "الخارجي", explanation: "النقد الخارجي هو إحدى خطوات تحليل مصادر البيانات في المنهج التاريخي، وهو يرتبط بشكل الوثيقة وعنوانها والتأكد من صحة نسبتها إلى عصرها ومؤلفها." },
                    { type: 'mcq', question: "أي نوع من الدراسات الوصفية يقوم بدراسة التغيرات التي تحدث في المتغيرات عبر الزمن؟", options: ["الدراسات المسحية", "الدراسات التطويرية", "دراسة الحالة"], answer: "الدراسات التطويرية", explanation: "الدراسات التطويرية تقوم على دراسة التغيرات التي تحدث في بعض المتغيرات من خلال قياس المتغير موضوع الدراسة على فترات زمنية مختلفة." }
                ]
            },
            'module2_method': {
                name: "مناهج البحث (تجريبي ومقارن)",
                icon: '<i class="fas fa-vials"></i>',
                questions: [
                    { type: 'mcq', question: "في المنهج التجريبي، ما هو المتغير الذي يريد الباحث قياس مدى تأثره؟", options: ["المتغير المستقل", "المتغير التابع", "المتغير الدخيل"], answer: "المتغير التابع", explanation: "المتغير التابع هو المتغير الناتج الذي يتأثر بالعامل المستقل. يقوم الباحث بضبط كل العوامل الأخرى لقياس تأثير المتغير المستقل على المتغير التابع." },
                    { type: 'fill', question: "يصف إيميل دوركايم المنهج المقارن بأنه نوع من ______ غير المباشر.", answer: "التجريب", explanation: "يصف إيميل دوركايم المنهج المقارن بأنه نوع من التجريب غير المباشر، لأنه يسمح بمقارنة الظواهر المتجانسة في أوضاع مختلفة للوصول إلى استنتاجات." },
                    { type: 'mcq', question: "ما هي أولى خطوات المنهج التجريبي؟", options: ["إجراء التجربة", "ملاحظة الظاهرة ووضع الفروض", "كتابة التقرير"], answer: "ملاحظة الظاهرة ووضع الفروض", explanation: "يبدأ المنهج التجريبي بملاحظة الظاهرة موضوع البحث، ثم تحديد المشكلة ووضع الفروض (الحلول المؤقتة) التي سيتم اختبارها عبر التجربة." },
                    { type: 'mcq', question: "ما هو الهدف الرئيسي للمنهج المقارن؟", options: ["دراسة حالة واحدة بعمق", "إجراء تجارب في المختبر", "دراسة أوجه الشبه والاختلاف بين الظواهر"], answer: "دراسة أوجه الشبه والاختلاف بين الظواهر", explanation: "المنهج المقارن هو الوسيلة العلمية التي تختص بدراسة أوجه الشبه والاختلاف بين الظواهر والمؤسسات في مجتمعات مختلفة أو في فترات زمنية مختلفة." },
                    { type: 'fill', question: "أحد أهم شروط التجريب الجيد هو ______ ودقة الفرضيات في ذهن الباحث.", answer: "وضوح", explanation: "للوصول إلى قانون علمي، يشترط في التجريب الجيد وضوح ودقة الفرضيات في ذهن الباحث، بالإضافة إلى التطبيق الدقيق للاختبارات والملاحظة الموضوعية." },
                    { type: 'mcq', question: "ما هو الشرط الأساسي لإجراء مقارنة صحيحة حسب إيميل دوركايم؟", options: ["مقارنة أي ظاهرتين", "مقارنة الظواهر المتجانسة فقط", "مقارنة الظواهر المتناقضة فقط"], answer: "مقارنة الظواهر المتجانسة فقط", explanation: "حسب إيميل دوركايم، يمكن فقط مقارنة الظواهر المتجانسة، عكس الظواهر الفيزيائية التي تسهل مقارنتها لقابليتها للتكرار في حالات متماثلة." }
                ]
            },
            'module3_method': {
                name: "مراحل البحث وعلم الآثار",
                icon: '<i class="fas fa-landmark"></i>',
                questions: [
                    { type: 'mcq', question: "قبل أن يختار الباحث موضوعه، أي سؤال يجب أن يطرحه على نفسه لضمان أصالة البحث؟", options: ["هل الموضوع سهل؟", "هل سبق لباحث آخر أن سجل للقيام بهذا البحث؟", "هل المصادر قليلة؟"], answer: "هل سبق لباحث آخر أن سجل للقيام بهذا البحث؟", explanation: "من أهم الأسئلة التي يجب أن يطرحها الباحث عند اختيار الموضوع هي: هل هو جديد؟ وهل سبق لباحث آخر أن سجله؟ وذلك لضمان أن البحث سيضيف جديداً للمعرفة." },
                    { type: 'mcq', question: "ما هو تعريف علم الآثار؟", options: ["علم دراسة النجوم", "العلم الذي يدرس الماضي من خلال المخلفات المادية", "علم دراسة اللغات القديمة"], answer: "العلم الذي يدرس الماضي من خلال المخلفات المادية", explanation: "علم الآثار هو العلم الذي يقوم بدراسة الماضي من خلال المخلفات المادية والثقافية (الحضارية) التي تركتها الشعوب القديمة." },
                    { type: 'fill', question: "الآثار التي تشمل الأدوات الحجرية أو الفخارية أو الحلي تسمى آثار ______.", answer: "منقولة", explanation: "الآثار المنقولة هي التي يمكن نقلها من مكانها، وتشمل الأدوات الحجرية، الفخارية، المعدنية، اللقى العضوية، الحلي، الأسلحة، والنقود." },
                    { type: 'mcq', question: "ما هي أولى مراحل العمل الأثري الميداني؟", options: ["التنقيب", "كتابة التقرير", "الإشكالية الأثرية (تحديد الهدف)"], answer: "الإشكالية الأثرية (تحديد الهدف)", explanation: "يبدأ العمل الأثري بتحديد الإشكالية الأثرية أو الهدف من البحث، ثم دراسة الوثائق، ثم الأسبار والمسح، وبعدها يأتي التنقيب." },
                    { type: 'mcq', question: "ماذا تسمى الآثار التي لا يمكن نقلها مثل البيوت والمعابد والمدافن؟", options: ["آثار فنية", "آثار غير منقولة", "آثار عضوية"], answer: "آثار غير منقولة", explanation: "الآثار غير المنقولة تشمل كل ما خلفه الإنسان من معالم وصروح وأبنية لا يمكن نقلها، مثل البيوت، المعابد، المدافن، والمسارح." },
                    { type: 'fill', question: "اكتشف عالم الآثار هوارد كارتر قبر الملك ______ سنة 1922.", answer: "توت عنخ آمون", explanation: "من الأمثلة على الاكتشافات الأثرية المهمة، اكتشاف عالم الآثار الإنجليزي 'هوارد كارتر' عام 1922 لقبر الملك المصري توت عنخ آمون المليء بالكنوز." }
                ]
            }
        }
    },
    'media_communication_intro': {
        name: "مدخل إلى وسائل الإعلام والاتصال",
        icon: '<i class="fas fa-broadcast-tower"></i>',
        modules: {
            'module1_media': {
                name: "تطور وسائل الاتصال",
                icon: '<i class="fas fa-history"></i>',
                questions: [
                    { type: 'mcq', question: "ما هي أقدم مراحل تطور الاتصال البشري؟", options: ["عصر الكتابة", "عصر الطباعة", "عصر الإشارات والعلامات"], answer: "عصر الإشارات والعلامات", explanation: "المرحلة الأولى هي عصر الإشارات والعلامات، حيث اعتمد الإنسان على عدد محدود من الأصوات ولغة الجسد للتواصل، وكانت الرسائل بسيطة وغير كافية للتطور الحضاري السريع." },
                    { type: 'fill', question: "ظهرت الكتابة ______ لأول مرة في بلاد ما بين النهرين، وكانت تعتمد على رسم صور صغيرة على ألواح طينية.", answer: "المسمارية", explanation: "نشأت الكتابة الرمزية التصويرية في بلاد ما بين النهرين قبل حوالي 4000 عام قبل الميلاد. طور السومريون الكتابة المسمارية، حيث كانوا يرسمون صورًا صغيرة على لوحة طرية من الطين للتعبير عن الأفكار." },
                    { type: 'mcq', question: "متى ظهرت الكتابة الألفبائية التي تعتمد على رموز الحروف للتعبير عن الأصوات؟", options: ["عام 65000 قبل الميلاد", "قبل 700 عام قبل الميلاد", "القرن التاسع عشر"], answer: "قبل 700 عام قبل الميلاد", explanation: "ظهرت الكتابة الألفبائية حوالي عام 700 قبل الميلاد، وتعتمد فكرتها على استخدام رموز الحروف للتعبير عن الأصوات الساكنة والمتحركة بدلاً من المقاطع الصوتية." },
                    { type: 'mcq', question: "ما هو العصر الذي شهد ثورة وسائل الاتصال الجماهيري واكتمل نموها في نصفه الأول من القرن العشرين؟", options: ["عصر الطباعة", "عصر الكتابة", "عصر الاتصال الجماهيري"], answer: "عصر الاتصال الجماهيري", explanation: "المرحلة الخامسة هي عصر الاتصال الجماهيري، حيث شهد القرن التاسع عشر ثورة في وسائل الاتصال اكتمل نموها في النصف الأول من القرن العشرين لمواكبة التطورات الضخمة في المجتمع." }
                ]
            },
            'module2_media': {
                name: "الصحافة الإلكترونية",
                icon: '<i class="fas fa-newspaper"></i>',
                questions: [
                    { type: 'mcq', question: "ما هو التعريف الأدق للصحافة الإلكترونية؟", options: ["منشور ورقي يتم توزيعه إلكترونياً", "منشور إلكتروني دوري يُقرأ عبر الحاسوب والإنترنت", "برنامج إذاعي على الإنترنت"], answer: "منشور إلكتروني دوري يُقرأ عبر الحاسوب والإنترنت", explanation: "الصحافة الإلكترونية هي منشور إلكتروني دوري يحتوي على الأحداث الجارية، ويتم قراءته من خلال جهاز الحاسوب، وغالباً ما يكون متاحاً عبر الإنترنت." },
                    { type: 'fill', question: "تعتبر صحيفة ______ السويدية أول صحيفة إلكترونية في العالم نُشرت بالكامل على الإنترنت عام 1990.", answer: "هيلزنبورج داجبلاد", explanation: "يُمكن القول إن صحيفة (هيلزنبورج داجبلاد) السويدية هي أول صحيفة إلكترونية في العالم تُنشر إلكترونيًا بالكامل على شبكة الإنترنت عام 1990." },
                    { type: 'mcq', question: "أي صحيفة أمريكية تُعد أول من نفذ مشروعاً إلكترونياً صحفياً ضخماً على الإنترنت؟", options: ["شيكاجو أونلاين", "بالو ألتو أونلاين", "واشنطن بوست"], answer: "واشنطن بوست", explanation: "تُعد صحيفة 'واشنطن بوست' الأمريكية أول صحيفة تنفذ مشروعاً إلكترونياً صحفياً ضخماً على الإنترنت، كلف تنفيذه عشرات الملايين من الدولارات، وكان بداية لجيل جديد من الصحف الإلكترونية." },
                    { type: 'mcq', question: "أي نوع من الصحافة الإلكترونية يعتبر مكملاً للنسخة الورقية؟", options: ["الصحافة الإلكترونية البحتة", "الصحافة النصف إلكترونية", "الصحافة المطابقة"], answer: "الصحافة النصف إلكترونية", explanation: "الصحافة النصف إلكترونية هي التي تكون مكملة للصحافة الورقية، حيث قد تنشر محتوى إضافياً أو مختلفاً عن النسخة المطبوعة." }
                ]
            },
            'module3_media': {
                name: "شبكات التواصل والإعلام الجديد",
                icon: '<i class="fas fa-share-alt"></i>',
                questions: [
                    { type: 'mcq', question: "ما المصطلح الإنجليزي الذي يطلق على مواقع التواصل الاجتماعي ويعني 'الترابط الشبكي الاجتماعي'؟", options: ["social media", "social network", "open source"], answer: "social network", explanation: "المصطلح الأدق لوصف مواقع التواصل الاجتماعي هو 'social network' أي الترابط الشبكي الاجتماعي، بينما 'social media' (وسائل الإعلام الاجتماعية) هو مصطلح أوسع." },
                    { type: 'fill', question: "ظهر موقع ______ عام 2002 ويعتبر الميلاد الفعلي للشبكات الاجتماعية كما نعرفها اليوم.", answer: "فريندستير", explanation: "ظهر موقع 'فريندستير (Friendster)' عام 2002، والذي حقق نجاحاً كبيراً دفع جوجل لمحاولة شرائه، ويعتبر الميلاد الفعلي للشبكات الاجتماعية الحديثة." },
                    { type: 'mcq', question: "ما هي الميزة الأساسية التي تميز 'الإعلام الجديد' عن الإعلام التقليدي؟", options: ["النشر الورقي", "التفاعلية", "البث الإذاعي"], answer: "التفاعلية", explanation: "الإعلام الجديد يعتمد على الكمبيوتر والاتصالات ويضيف خاصية 'التفاعل'، وهي قدرة الوسيلة على الاستجابة لحديث المستخدم كما يحدث في محادثة بين شخصين، وهي ميزة لا يوفرها الإعلام التقليدي." },
                    { type: 'fill', question: "مصطلح ______ يعني أن الرسالة الاتصالية في الإعلام الجديد يمكن أن تتوجه إلى فرد واحد أو جماعة معينة وليس جماهير ضخمة.", answer: "تفتيت الاتصال", explanation: "تفتيت الاتصال هي إحدى مميزات الإعلام الجديد، وتعني أن الرسالة يمكن أن تكون موجهة لفرد أو جماعة محددة، مما يعطي درجة تحكم أكبر في نظام الاتصال." }
                ]
            },
            'module4_media': {
                name: "صحافة المواطن",
                icon: '<i class="fas fa-users"></i>',
                questions: [
                    { type: 'mcq', question: "ما هو الاسم الآخر الذي يُعرف به 'صحافة المواطن'؟", options: ["الصحافة الحكومية", "الصحافة التشاركية", "الصحافة الاحترافية"], answer: "الصحافة التشاركية", explanation: "تُعرف صحافة المواطن بأسماء متنوعة منها: الصحافة التشاركية (participatory journalism)، الصحافة العامة، الديمقراطية، وصحافة الشارع." },
                    { type: 'fill', question: "المفهوم الأساسي لصحافة المواطن هو أن بإمكان أي شخص أن يكون ______ ينقل رأيه ومشاهداته للعالم.", answer: "صحفياً", explanation: "يشير مصطلح صحافة المواطن إلى أن بإمكان أي شخص أن يكون صحفياً ينقل رأيه ومشاهداته للعالم أجمع، دون الحاجة لشهادة في الإعلام أو الانتماء لمؤسسة إعلامية." },
                    { type: 'mcq', question: "على ماذا يعتمد مفهوم صحافة المواطن بشكل أساسي؟", options: ["الصحف الورقية فقط", "شبكة الإنترنت كفضاء للنشر", "محطات التلفزيون"], answer: "شبكة الإنترنت كفضاء للنشر", explanation: "يعتمد مفهوم صحافة المواطن بشكل أساسي على شبكة الإنترنت كفضاء للنشر والتعبير عن الرأي، وتأكيد حضور المواطن في قضايا الشأن العام." },
                    { type: 'mcq', question: "أي مما يلي يُعتبر من المصطلحات التي تصف صحافة المواطن؟", options: ["الإعلام مغلق المصدر", "الإعلام البديل", "الإعلام الرسمي"], answer: "الإعلام البديل", explanation: "تعتبر مخرجات صحافة المواطن امتداداً لمرجعيات الإعلام البديل والصحافة البديلة، وهي تختلف عن الإعلام الرسمي أو التقليدي." }
                ]
            }
        }
    }
};

// Updated ICONS object to use Font Awesome classes
const ICONS = {
    lock: '<i class="fas fa-lock"></i>',
    attempt: '<i class="fas fa-heart"></i>',
    user: '<i class="fas fa-user-circle"></i>',
    level: '<i class="fas fa-graduation-cap"></i>', // Changed to a more relevant icon
    points: '<i class="fas fa-star"></i>', // Changed to a more relevant icon
    dashboard: '<i class="fas fa-tachometer-alt"></i>',
    comment: '<i class="fas fa-comments"></i>',
    leaderboard: '<i class="fas fa-trophy"></i>' // New icon for leaderboard
};

const mainContainer = document.getElementById('main-container');
const screens = {
    welcome: document.getElementById('welcome-screen'),
    institute: document.getElementById('institute-screen'),
    year: document.getElementById('year-screen'),
    semester: document.getElementById('semester-screen'),
    course: document.getElementById('course-screen'),
    academicPath: document.getElementById('academic-path-screen'),
    quiz: document.getElementById('quiz-screen'),
    userProfile: document.getElementById('user-profile-screen'),
    developerDashboard: document.getElementById('developer-dashboard-screen'),
    leaderboard: document.getElementById('leaderboard-screen'), // New screen reference
    adminDashboard: document.getElementById('admin-dashboard-screen')
};
const quizHud = document.getElementById('quiz-hud');
const attemptsContainer = document.getElementById('attempts-container');
const feedbackContainer = document.getElementById('feedback-container');
const feedbackTitle = document.getElementById('feedback-title');
const feedbackText = document.getElementById('feedback-text');
const progressBar = document.getElementById('progress-bar-inner');
const academicPointsDisplay = document.querySelector('#academic-points span');
const certificateModal = document.getElementById('certificate-modal');
const appHeader = document.getElementById('app-header');
const questionText = document.getElementById('question-text');
const optionsGrid = document.getElementById('options-grid');
const explanationBtn = document.getElementById('explanation-btn');
const authModal = document.getElementById('auth-modal');
const authModalTitle = document.getElementById('auth-modal-title');
const authForm = document.getElementById('auth-form');
const authEmailInput = document.getElementById('auth-email');
const authPasswordInput = document.getElementById('auth-password');
const authSubmitBtn = document.getElementById('auth-submit-btn');
const switchToRegisterLink = document.getElementById('switch-to-register');
const commentsModal = document.getElementById('comments-modal');
const commentsList = document.getElementById('comments-list');
const newCommentText = document.getElementById('new-comment-text');
const submitCommentBtn = document.getElementById('submit-comment-btn');
const toastNotification = document.getElementById('toast-notification');

// Mock user data and state
let gameState = {
    currentCourse: null,
    currentModule: null,
    currentQuestionIndex: 0,
    score: 0,
    attempts: 0,
    totalAcademicPoints: 0,
    userLevel: 1, // Initial user level
    // All modules for 'humanities_fields' are unlocked initially for testing
    unlockedModules: [],
    MAX_ATTEMPTS: 3,
    currentUser: null, // Stores logged-in user info
    isDeveloper: false, // Flag for developer access
    // Mock user database (for frontend simulation only)
    mockUsers: [
        { email: 'dev@example.com', password: 'devpass', name: 'المطور', id: 'dev123', role: 'developer', academicPoints: 9999, level: 10, unlockedModules: [] },
        { email: 'user@example.com', password: 'userpass', name: 'طالب جامعي', id: 'user123', role: 'student', academicPoints: 150, level: 3, unlockedModules: ['module1_civ', 'module2_civ', 'module1_res'] },
        { email: 'student2@example.com', password: 'pass', name: 'طالب مجتهد', id: 'user456', role: 'student', academicPoints: 200, level: 4, unlockedModules: ['module1_civ', 'module2_civ', 'module3_civ', 'module1_res', 'module2_res'] },
        { email: 'student3@example.com', password: 'pass', name: 'طالب جديد', id: 'user789', role: 'student', academicPoints: 50, level: 1, unlockedModules: ['module1_civ'] }
    ],
    // Mock analytics data (for developer dashboard simulation only)
    mockAnalytics: {
        dailyUsers: 150,
        weeklyUsers: 800,
        yearlyUsers: 5000,
        visitRate: '75%',
        userErrors: [
            { userId: 'user123', type: 'Quiz Error', details: 'أخطأ في سؤال مضيق هرمز 3 مرات', timestamp: '2023-10-27 14:05' },
            { userId: 'newuser456', type: 'Login Failed', details: 'حاول تسجيل الدخول بكلمة مرور خاطئة', timestamp: '2023-10-27 14:10' },
            { userId: 'user123', type: 'Comment Spam', details: 'أرسل تعليقًا متكررًا', timestamp: '2023-10-27 14:20' }
        ]
    }
};

const sounds = {
    correct: document.getElementById('correct-sound'),
    wrong: document.getElementById('wrong-sound'),
    levelUp: document.getElementById('level-up-sound')
};
function playSound(sound) {
    sounds[sound].currentTime = 0;
    sounds[sound].play().catch(error => console.log("Playback prevented by browser:", error));
}

// Utility function to show toast notifications
function showToast(message, duration = 3000, type = 'info') { // Added type for different styles
    toastNotification.textContent = message;
    toastNotification.className = 'show'; // Reset classes
    toastNotification.classList.add(type); // Add type class for styling (e.g., 'info', 'success', 'error')
    setTimeout(() => {
        toastNotification.classList.remove('show', type);
    }, duration);
}

// --- Authentication Functions (Frontend Mock - Backend needed for real functionality) ---
function showAuthModal(mode = 'login') {
    authModal.classList.add('show');
    
    const usernameGroup = document.getElementById('username-group');
    const usernameInput = document.getElementById('auth-username');
    const switchToRegisterContainer = document.getElementById('switch-to-register-container');

    if (mode === 'login') {
        authModalTitle.textContent = 'تسجيل الدخول';
        authSubmitBtn.textContent = 'تسجيل الدخول';
        
        usernameGroup.classList.add('hidden');
        usernameInput.required = false; 

        switchToRegisterContainer.innerHTML = 'ليس لديك حساب؟ <a href="#" id="switch-to-register">سجل الآن</a>';
        document.getElementById('switch-to-register').onclick = (e) => { e.preventDefault(); showAuthModal('register'); };

    } else { // register
        authModalTitle.textContent = 'إنشاء حساب جديد';
        authSubmitBtn.textContent = 'إنشاء حساب';
        
        usernameGroup.classList.remove('hidden');
        usernameInput.required = true;

        switchToRegisterContainer.innerHTML = 'لديك حساب بالفعل؟ <a href="#" id="switch-to-login">سجل دخول</a>';
        document.getElementById('switch-to-login').onclick = (e) => { e.preventDefault(); showAuthModal('login'); };
    }

    authForm.onsubmit = (e) => {
        e.preventDefault();
        handleAuthSubmit(mode);
    };
}

function closeAuthModal() {
    authModal.classList.remove('show');
    authEmailInput.value = '';
    authPasswordInput.value = '';
    document.getElementById('auth-username').value = ''; // Clear username field too
}

async function handleAuthSubmit(mode) {
    const email = document.getElementById('auth-email').value;
    const password = document.getElementById('auth-password').value;
    let username = '';
    if (mode === 'register') {
        username = document.getElementById('auth-username').value;
    }

    showToast(`جاري ${mode === 'login' ? 'تسجيل الدخول' : 'إنشاء الحساب'}...`, 3000, 'info');

    const endpoint = mode === 'login' ? 'login' : 'register';
    const body = mode === 'login' ? { email, password } : { username, email, password };

    try {
        const response = await fetch(`https://academic-challenge-api.onrender.com/api/auth/${endpoint}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(body)
        });
        const data = await response.json();
        if (!response.ok) throw new Error(data.message || 'حدث خطأ ما');

        localStorage.setItem('token', data.token);
        gameState.currentUser = data.user;
        
        if (mode === 'login') {
            gameState.totalAcademicPoints = data.user.academic_points;
            gameState.userLevel = data.user.level;
            gameState.unlockedModules = data.user.unlocked_modules || [];
        } else {
            gameState.totalAcademicPoints = 0;
            gameState.userLevel = 1;
            gameState.unlockedModules = [];
        }
        
        gameState.isDeveloper = (data.user.role === 'developer');

        showToast(mode === 'login' ? `أهلاً بك مرة أخرى ${data.user.username}!` : 'تم إنشاء حسابك بنجاح!', 3000, 'success');
        closeAuthModal();
        updateHeaderForUser();
        showScreen('institute');

    } catch (error) {
        showToast(`فشل: ${error.message}`, 4000, 'error');
    }
}

function updateHeaderForUser() {
    const userProfileItem = document.getElementById('user-profile');
    if (gameState.currentUser) {
        userProfileItem.innerHTML = `${ICONS.user}<span>${gameState.currentUser.username}</span>`; // تصحيح هنا
        userProfileItem.onclick = showUserProfile;
    } else {
        userProfileItem.innerHTML = `${ICONS.user}<span>تسجيل الدخول</span>`;
        userProfileItem.onclick = () => showAuthModal('login');
    }
    document.querySelector('#user-level').innerHTML = `${ICONS.level}<span>المستوى ${gameState.userLevel}</span>`;
    document.getElementById('academic-points').innerHTML = `${ICONS.points}<span>${gameState.totalAcademicPoints}</span>`;
}

async function showAdminDashboard() {
    const adminScreen = document.getElementById('admin-dashboard-screen');
    showScreen('adminDashboard');
    adminScreen.innerHTML = `<h2><i class="fas fa-spinner fa-spin"></i> جاري تحميل بيانات المشرف...</h2>`;

    const token = localStorage.getItem('token');
    if (!token) {
        adminScreen.innerHTML = '<h2>خطأ: يجب تسجيل الدخول</h2>';
        return;
    }

    try {
        const response = await fetch('https://academic-challenge-api.onrender.com/api/users', {
            headers: { 'x-auth-token': token }
        });
        const users = await response.json();
        if (!response.ok) throw new Error(users.message || 'فشل تحميل البيانات.');

        // --- START: حساب الإحصائيات الحقيقية ---
        const today = new Date().toISOString().slice(0, 10); // تاريخ اليوم بصيغة YYYY-MM-DD
        const newUsersToday = users.filter(user => user.created_at.slice(0, 10) === today).length;
        // --- END: حساب الإحصائيات الحقيقية ---

        let dashboardHTML = `
            <h2>لوحة تحكم المشرف</h2>
            
            <div class="card-list" style="grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); margin-bottom: 40px;">
                <div class="card"><span>إجمالي المستخدمين</span> <span style="font-size: 1.5rem; color: var(--color-accent-gold);">${users.length}</span></div>
                <div class="card"><span>المستخدمون الجدد اليوم</span> <span style="font-size: 1.5rem; color: var(--color-accent-gold);">${newUsersToday}</span></div>
            </div>

            <h3>قائمة إدارة المستخدمين</h3>
            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>اسم المستخدم</th>
                            <th>البريد الإلكتروني</th>
                            <th>المستوى</th>
                            <th>النقاط</th>
                            <th>تاريخ التسجيل</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${users.map(user => `
                            <tr>
                                <td>${user.username}</td>
                                <td>${user.email}</td>
                                <td>${user.level}</td>
                                <td>${user.academic_points}</td>
                                <td>${new Date(user.created_at).toLocaleDateString('ar-EG')}</td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            </div>
            
            <button class="btn" style="background: linear-gradient(45deg, #6c757d, #5a6268); margin-top: 25px;" onclick="showUserProfile()">العودة للملف الشخصي</button>
        `;
        adminScreen.innerHTML = dashboardHTML;

    } catch (error) {
        adminScreen.innerHTML = `<div style="text-align: center;"><h2>خطأ</h2><p>${error.message}</p></div>`;
    }
}

async function checkLoggedIn() {
    const token = localStorage.getItem('token');
    if (!token) {
        showScreen('welcome');
        return;
    }
    try {
        const response = await fetch('https://academic-challenge-api.onrender.com/api/auth/me', {
            headers: { 'x-auth-token': token }
        });
        const data = await response.json();
        if (!response.ok) {
            localStorage.removeItem('token');
            showScreen('welcome');
            return;
        }
        
        // املأ بيانات gameState
        gameState.currentUser = data;
        gameState.totalAcademicPoints = data.academic_points;
        gameState.userLevel = data.level;
        gameState.unlockedModules = data.unlocked_modules || [];
        
        updateHeaderForUser();

        // اقرأ آخر شاشة محفوظة وانتقل إليها
        const lastScreen = localStorage.getItem('lastScreen') || 'institute';
        showScreen(lastScreen);

    } catch (error) {
        localStorage.removeItem('token');
        showScreen('welcome');
    }
}

function showUserProfile() {
    if (!gameState.currentUser) {
        showAuthModal('login');
        return;
    }

    // --- START: NEW CODE ---
    // تحقق إذا كان المستخدم الحالي مشرفاً
    const isAdmin = gameState.currentUser.role === 'admin';
    
    // قم بإنشاء كود HTML الخاص بزر المشرف فقط إذا كان الشرط صحيحاً
    const adminButtonHTML = isAdmin 
        ? `<div class="card" onclick="showAdminDashboard()"><span>لوحة تحكم المشرف</span> ${ICONS.dashboard}</div>` 
        : ''; // إذا لم يكن مشرفاً، لا تضف أي شيء
    // --- END: NEW CODE ---

    screens.userProfile.innerHTML = `
        <h2>الملف الشخصي</h2>
        <div class="card-list" style="grid-template-columns: 1fr;">
            <div class="card"><span>البريد الإلكتروني:</span> <span>${gameState.currentUser.email}</span></div>
            <div class="card"><span>الاسم:</span> <span>${gameState.currentUser.username}</span></div>
            <div class="card"><span>المستوى الأكاديمي:</span> <span>${gameState.userLevel}</span></div>
            <div class="card"><span>النقاط الأكاديمية:</span> <span>${gameState.totalAcademicPoints}</span></div>
            
            ${adminButtonHTML} <!-- هنا سيتم وضع زر المشرف (أو سيترك فارغاً) -->

            <div class="card" onclick="showCommentsModal()"><span>التعليقات والملاحظات</span> ${ICONS.comment}</div>
            <div class="card" onclick="renderLeaderboardScreen()"><span>لوحة المتصدرين</span> ${ICONS.leaderboard}</div>
            <button class="btn" onclick="logoutUser()">تسجيل الخروج</button>
            <button class="btn" style="background: linear-gradient(45deg, #6c757d, #5a6268); margin-top: 15px;" onclick="showScreen('institute')">العودة للرئيسية</button>
        </div>
    `;
    showScreen('userProfile');
}
function logoutUser() {
    // Save current user state to mockUsers before logging out (for persistence in mock)
    if (gameState.currentUser) {
        const userIndex = gameState.mockUsers.findIndex(u => u.id === gameState.currentUser.id);
        if (userIndex !== -1) {
            gameState.mockUsers[userIndex].academicPoints = gameState.totalAcademicPoints;
            gameState.mockUsers[userIndex].level = gameState.userLevel;
            gameState.mockUsers[userIndex].unlockedModules = [...gameState.unlockedModules];
        }
    }

    gameState.currentUser = null;
    gameState.isDeveloper = false;
    gameState.totalAcademicPoints = 0;
    gameState.userLevel = 1;
    gameState.unlockedModules = []; // Reset unlocked modules for a new session
    localStorage.removeItem('token'); // Clear token on logout
    updateHeaderForUser();
    showToast('تم تسجيل الخروج بنجاح.', 3000, 'info');
    showScreen('welcome');
}

// --- Developer Dashboard (Frontend Mock) ---
function showDeveloperDashboard() {
    if (!gameState.isDeveloper) {
        showToast('ليس لديك صلاحية الوصول لهذه الصفحة.', 3000, 'error');
        showScreen('welcome'); // Redirect if not developer
        return;
    }
    appHeader.style.display = 'flex';
    screens.developerDashboard.innerHTML = `
        <h2>لوحة تحكم المطور</h2>
        <div class="card-list" style="grid-template-columns: 1fr;">
            <div class="card"><span>عدد المستخدمين الكلي:</span> <span>${gameState.mockUsers.length}</span></div>
            <div class="card"><span>عدد المستخدمين اليومي:</span> <span>${gameState.mockAnalytics.dailyUsers}</span></div>
            <div class="card"><span>عدد المستخدمين الأسبوعي:</span> <span>${gameState.mockAnalytics.weeklyUsers}</span></div>
            <div class="card"><span>عدد المستخدمين السنوي:</span> <span>${gameState.mockAnalytics.yearlyUsers}</span></div>
            <div class="card"><span>نسبة زيارات الموقع:</span> <span>${gameState.mockAnalytics.visitRate}</span></div>
            <div class="card" onclick="renderManageUsersScreen()"><span>إدارة المستخدمين</span> ${ICONS.user}</div>
            <div class="card" onclick="renderUserErrorsScreen()"><span>سجل أخطاء المستخدمين</span> ${ICONS.comment}</div>
            <button class="btn" style="background: linear-gradient(45deg, #6c757d, #5a6268); margin-top: 25px;" onclick="showUserProfile()">العودة للملف الشخصي</button>
        </div>
    `;
    showScreen('developerDashboard');
}

function renderManageUsersScreen() {
    if (!gameState.isDeveloper) { showToast('ليس لديك صلاحية.', 3000, 'error'); return; }
    screens.developerDashboard.innerHTML = `
        <h2>إدارة المستخدمين</h2>
        <div class="user-management-list">
            ${gameState.mockUsers.map(user => `
                <div class="card user-item">
                    <span>${user.name} (${user.email}) - المستوى: ${user.level} - النقاط: ${user.academicPoints}</span>
                    <button class="btn-small btn-delete" onclick="deleteUser('${user.id}')">حذف</button>
                </div>
            `).join('')}
        </div>
        <button class="btn" style="background: linear-gradient(45deg, #6c757d, #5a6268); margin-top: 25px;" onclick="showDeveloperDashboard()">العودة للوحة التحكم</button>
    `;
    showScreen('developerDashboard'); // Re-use dashboard screen for sub-views
}

function deleteUser(userId) {
    if (!gameState.isDeveloper) { showToast('ليس لديك صلاحية.', 3000, 'error'); return; }
    if (confirm('هل أنت متأكد من حذف هذا المستخدم؟')) {
        gameState.mockUsers = gameState.mockUsers.filter(user => user.id !== userId);
        showToast('تم حذف المستخدم بنجاح (وهمي).', 3000, 'success');
        renderManageUsersScreen(); // Re-render the list
        saveGameState(); // Save state after deletion
    }
}

function renderUserErrorsScreen() {
    if (!gameState.isDeveloper) { showToast('ليس لديك صلاحية.', 3000, 'error'); return; }
    screens.developerDashboard.innerHTML = `
        <h2>سجل أخطاء المستخدمين</h2>
        <div class="error-log-list">
            ${gameState.mockAnalytics.userErrors.map(error => `
                <div class="card error-item">
                    <p><strong>المستخدم:</strong> ${error.userId}</p>
                    <p><strong>النوع:</strong> ${error.type}</p>
                    <p><strong>التفاصيل:</strong> ${error.details}</p>
                    <span style="font-size: 0.8em; opacity: 0.6;">${error.timestamp}</span>
                </div>
            `).join('')}
        </div>
        <button class="btn" style="background: linear-gradient(45deg, #6c757d, #5a6268); margin-top: 25px;" onclick="showDeveloperDashboard()">العودة للوحة التحكم</button>
    `;
    showScreen('developerDashboard');
}

// --- New Leaderboard Screen ---
async function renderLeaderboardScreen() {
    showScreen('leaderboard');
    const leaderboardScreen = document.getElementById('leaderboard-screen');
    leaderboardScreen.innerHTML = `<h2><i class="fas fa-spinner fa-spin"></i> جاري تحميل لوحة المتصدرين...</h2>`;

    try {
        const response = await fetch('https://academic-challenge-api.onrender.com/api/users/leaderboard');
        const topUsers = await response.json();
        if (!response.ok) throw new Error('فشل تحميل البيانات');

        leaderboardScreen.innerHTML = `
            <h2>${ICONS.leaderboard} لوحة المتصدرين</h2>
            <div class="leaderboard-list">
                ${topUsers.map((user, index) => `
                    <div class="card leaderboard-item">
                        <span class="rank">${index + 1}</span>
                        <span class="username">${user.username}</span>
                        <div class="user-stats">
                            <span>${ICONS.level} المستوى: ${user.level}</span>
                            <span>${ICONS.points} النقاط: ${user.academic_points}</span>
                        </div>
                    </div>
                `).join('')}
            </div>
            <button class="btn" style="background: linear-gradient(45deg, #6c757d, #5a6268); margin-top: 25px;" onclick="showUserProfile()">العودة للملف الشخصي</button>
        `;
    } catch (error) {
        leaderboardScreen.innerHTML = `<div style="text-align: center;"><h2>خطأ</h2><p>${error.message}</p></div>`;
    }
}


// --- Comments System (Frontend Mock) ---
function showCommentsModal() {
    if (!gameState.currentUser) {
        showAuthModal('login');
        return;
    }
    commentsModal.classList.add('show');
    renderComments(); // Display existing comments (mocked)
    submitCommentBtn.onclick = submitComment;
}

function closeCommentsModal() {
    commentsModal.classList.remove('show');
    newCommentText.value = '';
}

// Mock comments data (in a real app, this would come from a database)
let mockComments = [
    { author_username: 'طالب جامعي', content: 'تطبيق رائع ومفيد جداً للمراجعة!', created_at: '2023-10-26T10:00:00Z' },
    { author_username: 'المطور', content: 'شكراً لملاحظاتكم، نعمل على تحسين التجربة باستمرار.', created_at: '2023-10-26T10:30:00Z' }
];

async function renderComments() {
    commentsList.innerHTML = '<p style="text-align: center; opacity: 0.7;">جاري تحميل التعليقات...</p>';
    
    try {
        // Mocking backend call for comments
        // In a real app, this would be:
        // const response = await fetch('https://academic-challenge-api.onrender.com/api/comments');
        // if (!response.ok) { throw new Error('فشل تحميل التعليقات'); }
        // const comments = await response.json();
        const comments = [...mockComments].reverse(); // Display newest first for mock

        commentsList.innerHTML = ''; // Clear the list before adding new comments

        if (comments.length === 0) {
            commentsList.innerHTML = '<p style="text-align: center; opacity: 0.7;">لا توجد تعليقات بعد. كن أول من يضيف تعليقاً!</p>';
            return;
        }

        comments.forEach(comment => {
            const commentDiv = document.createElement('div');
            commentDiv.className = 'comment-card';
            commentDiv.innerHTML = `
                <p><strong>${comment.author_username || 'مستخدم'}:</strong> ${comment.content}</p>
                <span>${new Date(comment.created_at).toLocaleString('ar-EG')}</span>
            `;
            commentsList.appendChild(commentDiv);
        });
        
        commentsList.scrollTop = commentsList.scrollHeight; // Scroll to bottom

    } catch (error) {
        commentsList.innerHTML = `<p style="text-align: center; color: var(--color-error);">خطأ: ${error.message}</p>`;
        console.error('Error fetching comments:', error);
    }
}

async function updateUserProgressOnServer() {
    // تأكد من وجود مستخدم مسجل دخول
    if (!gameState.currentUser) return;

    // In a real app, you'd send a token here
    // const token = localStorage.getItem('token');
    // if (!token) { console.error("Token not found. Cannot update progress."); return; }

    try {
        // Mocking backend call for progress update
        const userIndex = gameState.mockUsers.findIndex(u => u.id === gameState.currentUser.id);
        if (userIndex !== -1) {
            gameState.mockUsers[userIndex].academicPoints = gameState.totalAcademicPoints;
            gameState.mockUsers[userIndex].level = gameState.userLevel;
            gameState.mockUsers[userIndex].unlockedModules = [...gameState.unlockedModules];
            console.log("Mock user progress updated:", gameState.mockUsers[userIndex]);
            showToast("تم حفظ تقدمك بنجاح!", 2000, 'success');
        } else {
            throw new Error("User not found in mock database.");
        }
        
        // In a real app:
        /*
        const response = await fetch('https://academic-challenge-api.onrender.com/api/users/progress', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
                'x-auth-token': token
            },
            body: JSON.stringify({
                academic_points: gameState.totalAcademicPoints,
                level: gameState.userLevel,
                unlocked_modules: gameState.unlockedModules
            })
        });
        const data = await response.json();
        if (!response.ok) {
            throw new Error(data.message || "Failed to update progress on server.");
        }
        console.log("User progress successfully saved to the server.");
        showToast("تم حفظ تقدمك بنجاح!", 2000, 'success');
        */

    } catch (error) {
        console.error("Error saving user progress:", error);
        showToast("خطأ: لم يتم حفظ تقدمك على الخادم.", 4000, 'error');
    }
    saveGameState(); // Save state after progress update
}

async function submitComment() {
    const commentText = newCommentText.value.trim();
    if (!commentText) {
        showToast('الرجاء كتابة تعليق قبل الإرسال.', 2000, 'error');
        return;
    }

    if (!gameState.currentUser) {
        showToast('الرجاء تسجيل الدخول لإضافة تعليق.', 3000, 'error');
        closeCommentsModal();
        showAuthModal('login');
        return;
    }

    try {
        // Mocking backend call for comment submission
        const newComment = {
            author_username: gameState.currentUser.name,
            content: commentText,
            created_at: new Date().toISOString()
        };
        mockComments.push(newComment);
        
        // In a real app:
        /*
        const token = localStorage.getItem('token');
        const response = await fetch('https://academic-challenge-api.onrender.com/api/comments', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-auth-token': token
            },
            body: JSON.stringify({ content: commentText })
        });
        const data = await response.json();
        if (!response.ok) {
            throw new Error(data.message || 'فشل إرسال التعليق');
        }
        */

        newCommentText.value = ''; // Clear input field
        showToast('تم إرسال تعليقك بنجاح!', 3000, 'success');
        
        await renderComments(); // Reload comments to show the new one

    } catch (error) {
        showToast(`خطأ: ${error.message}`, 4000, 'error');
        console.error('Error submitting comment:', error);
    }
    saveGameState(); // Save state after comment submission
}


// --- Core App Logic (Remains largely the same, with minor adjustments) ---
function initializeApp() {
    checkLoggedIn(); // بدلاً من إظهار شاشة الترحيب، تحقق أولاً من حالة تسجيل الدخول
}

function saveGameState() {
    localStorage.setItem('academicChallengeGameState', JSON.stringify({
        currentUser: gameState.currentUser,
        isDeveloper: gameState.isDeveloper,
        totalAcademicPoints: gameState.totalAcademicPoints,
        userLevel: gameState.userLevel,
        unlockedModules: gameState.unlockedModules,
        mockUsers: gameState.mockUsers, // Save mock users for persistence
        mockComments: mockComments // Save mock comments for persistence
    }));
}

function showScreen(screenKey) {
    // إخفاء جميع الشاشات أولاً
    Object.values(screens).forEach(s => s.classList.add('hidden'));

    // إظهار الشاشة المطلوبة فقط إذا كانت موجودة
    if (screens[screenKey]) {
        screens[screenKey].classList.remove('hidden');
    }

    // --- START: NEW CODE (لحفظ آخر شاشة) ---
    // نحن لا نريد حفظ الشاشات التي لا يجب أن تكون نقطة بداية،
    // مثل شاشة الاختبار، أو شاشة الترحيب (لأن المستخدم سيكون قد سجل دخوله).
    const screensToExclude = ['quiz', 'welcome'];
    if (!screensToExclude.includes(screenKey)) {
        localStorage.setItem('lastScreen', screenKey);
    }
    // --- END: NEW CODE ---

    // إظهار وإخفاء الشريط العلوي (Header) وشريط الاختبار (HUD) بناءً على الشاشة
    const isFullScreen = (screenKey === 'welcome' || screenKey === 'quiz');
    appHeader.style.display = isFullScreen ? 'none' : 'flex';
    quizHud.classList.toggle('active', screenKey === 'quiz');

    // تشغيل دوال العرض الخاصة بكل شاشة
    const renderFunction = {
        'welcome': renderWelcomeScreen,
        'institute': renderInstituteScreen,
        'year': renderYearScreen,
        'semester': renderSemesterScreen,
        'course': renderCourseScreen,
        'academicPath': renderAcademicPathScreen,
        'quiz': displayQuestion,
        'userProfile': showUserProfile, // تأكد من أن showUserProfile لا تستدعي showScreen مرة أخرى لتجنب حلقة لا نهائية
        'adminDashboard': showAdminDashboard, // نفس الملاحظة هنا
        'leaderboard': renderLeaderboardScreen // ونفس الملاحظة هنا
    }[screenKey];

    // استدعاء دالة العرض فقط إذا كانت موجودة،
    // واستدعاء showUserProfile وغيرها يتم من خلال onclick، لذلك لا نحتاج لاستدعائها هنا مرة أخرى.
    // هذا يمنع إعادة العرض غير الضرورية.
    if (renderFunction && !['userProfile', 'adminDashboard', 'leaderboard'].includes(screenKey)) {
        renderFunction();
    }
}

function renderWelcomeScreen() {
    appHeader.style.display = 'none';
    screens.welcome.innerHTML = `
        <div class="welcome-content">
            <div class="logo">${ICONS.level}</div>
            <h1>منصة التحدي الأكاديمي</h1>
            <p class="screen-description">بوابتك التفاعلية للتفوق في مسيرتك الجامعية. تعلم، اختبر معلوماتك، وتصدر قائمة المتفوقين.</p>
            <div class="features-grid">
                <div class="feature-item"><i class="fas fa-book-open"></i> محتوى متخصص</div>
                <div class="feature-item"><i class="fas fa-question-circle"></i> اختبارات تفاعلية</div>
                <div class="feature-item"><i class="fas fa-trophy"></i> تنافس وتصدر</div>
            </div>
            <button class="btn" onclick="showAuthModal('login')">ابدأ رحلتك الآن</button>
        </div>
    `;
}

function renderInstituteScreen() {
    if (!gameState.currentUser) {
        showAuthModal('login'); // Force login if not authenticated
        return;
    }
    appHeader.style.display = 'flex';
    screens.institute.innerHTML = `
        <h2>اختر تخصص</h2>
        <div class="card-list">
            <div class="card" onclick="showScreen('year')"><span>تخصص العلوم الإنسانية</span></div>
            <div class="card locked"><span>تخصص العلوم الاجتماعية</span>${ICONS.lock}</div>
            <div class="card locked"><span>تخصص الحقوق والعلوم السياسية</span>${ICONS.lock}</div>
            <div class="card locked"><span>تخصص العلوم والتكنولوجيا</span>${ICONS.lock}</div>
            <div class="card locked"><span>تخصص العلوم الاقتصادية</span>${ICONS.lock}</div>
        </div>`;
}

function renderYearScreen() {
    if (!gameState.currentUser) { showAuthModal('login'); return; }
    screens.year.innerHTML = `
        <h2>اختر السنة الدراسية</h2>
        <div class="card-list">
            <div class="card" onclick="showScreen('semester')"><span>السنة الأولى (جذع مشترك)</span></div>
            <div class="card locked"><span>السنة الثانية (تخصص)</span>${ICONS.lock}</div>
            <div class="card locked"><span>السنة الثالثة (تخصص)</span>${ICONS.lock}</div>
        </div>`;
}

function renderSemesterScreen() {
    if (!gameState.currentUser) { showAuthModal('login'); return; }
    screens.semester.innerHTML = `
        <h2>اختر السداسي</h2>
        <div class="card-list">
            <div class="card locked"><span>السداسي الأول</span>${ICONS.lock}</div>
            <div class="card" onclick="showScreen('course')"><span>السداسي الثاني</span></div>
        </div>`;
}

function renderCourseScreen() {
    if (!gameState.currentUser) { showAuthModal('login'); return; }
    let courseCardsHTML = Object.keys(quizData).map(courseKey => {
        const course = quizData[courseKey];
        // A course is considered locked if it has no modules or if its first module is not unlocked
        // For simplicity, we'll just check if it has modules. Real locking would be more complex.
        const isLocked = !course.modules || Object.keys(course.modules).length === 0; // Simplified locking
        return `
            <div class="card ${isLocked ? 'locked' : ''}" onclick="${isLocked ? '' : `selectCourse('${courseKey}')`}">
                <span>${course.name}</span>
                ${isLocked ? ICONS.lock : course.icon} <!-- Display course icon if unlocked, lock if locked -->
            </div>
        `;
    }).join('');

    screens.course.innerHTML = `
        <h2>اختر المقياس الدراسي</h2>
        <div class="card-list">${courseCardsHTML}</div>
    `;
}

function selectCourse(courseKey) {
    if (!gameState.currentUser) { showAuthModal('login'); return; }
    console.log(`Selected course: ${courseKey}`);
    gameState.currentCourse = courseKey;
    showScreen('academicPath');
}

function renderAcademicPathScreen() {
    if (!gameState.currentUser) { showAuthModal('login'); return; }
    quizHud.classList.remove('active');
    const course = quizData[gameState.currentCourse];
    let moduleNodesHTML = Object.keys(course.modules).map(moduleKey => {
        const module = course.modules[moduleKey];
        const isLocked = false;        return `
            <div class="module-node ${isLocked ? 'locked' : ''}" onclick="${isLocked ? '' : `startQuiz('${moduleKey}')`}">
                <div class="module-icon">${module.icon}</div>
                <h3>${module.name}</h3>
            </div>`;
    }).join('');

    screens.academicPath.innerHTML = `
        <h2>محتوى مقياس: ${course.name}</h2>
        <div class="academic-path">${moduleNodesHTML}</div>
        <button class="btn" style="background: linear-gradient(45deg, #6c757d, #5a6268); margin-top: 40px;" onclick="showScreen('course')">العودة للمقاييس</button>
        `;
}

function startQuiz(moduleKey) {
    if (!gameState.currentUser) {
        showAuthModal('login');
        return;
    }
    console.log(`Starting quiz for module: ${moduleKey}`);
    gameState.currentModule = moduleKey;
    gameState.currentQuestionIndex = 0;
    gameState.score = 0;
    gameState.attempts = gameState.MAX_ATTEMPTS;
    quizHud.classList.add('active');
    appHeader.style.display = 'none'; // Hide header during quiz
    updateAttemptsDisplay();
    showScreen('quiz');
    displayQuestion();
}

function confirmExitQuiz() {
    if (confirm('هل أنت متأكد أنك تريد الخروج من الاختبار؟ سيتم فقدان تقدمك الحالي.')) {
        showScreen('academicPath');
    }
}

function displayQuestion() {
    const questionData = quizData[gameState.currentCourse].modules[gameState.currentModule].questions[gameState.currentQuestionIndex];
    let questionHTML = questionData.question.replace('______', '<span class="blank">______</span>');

    questionText.innerHTML = questionHTML;
    optionsGrid.innerHTML = '';

    if (questionData.type === 'fill') {
        optionsGrid.innerHTML = `
            <div class="fill-in-container">
                <input type="text" class="fill-in-input" id="fill-in-answer" placeholder="اكتب إجابتك هنا" onkeydown="if(event.key==='Enter') document.getElementById('check-answer-btn').click()">
                <button id="check-answer-btn" onclick="checkFillAnswer()">تحقق</button>
            </div>`;
        document.getElementById('fill-in-answer').focus();
    } else { // MCQ
        questionData.options.forEach(opt => {
            const button = document.createElement('button');
            button.className = 'card option-btn';
            button.textContent = opt;
            button.onclick = () => selectMCQAnswer(button, opt);
            optionsGrid.appendChild(button);
        });
    }

    progressBar.style.width = `${(gameState.currentQuestionIndex / quizData[gameState.currentCourse].modules[gameState.currentModule].questions.length) * 100}%`;
}

function updateAttemptsDisplay() {
    attemptsContainer.innerHTML = '';
    for (let i = 0; i < gameState.MAX_ATTEMPTS; i++) { // Always show MAX_ATTEMPTS hearts
        const heartIcon = document.createElement('i');
        heartIcon.className = 'fas fa-heart'; // Font Awesome heart
        if (i >= gameState.attempts) {
            heartIcon.classList.add('lost'); // Add a class for lost attempts
        }
        attemptsContainer.appendChild(heartIcon);
    }
}

function selectMCQAnswer(button, selectedOption) {
    document.querySelectorAll('.option-btn').forEach(btn => btn.disabled = true);
    const questionData = quizData[gameState.currentCourse].modules[gameState.currentModule].questions[gameState.currentQuestionIndex];
    const isCorrect = selectedOption.toLowerCase() === questionData.answer.toLowerCase();
    processAnswer(isCorrect, button);
}

function checkFillAnswer() {
    const input = document.getElementById('fill-in-answer');
    const checkBtn = document.getElementById('check-answer-btn');
    const userAnswer = input.value.trim();

    if (!userAnswer) {
        showToast('الرجاء كتابة إجابتك.', 2000, 'error');
        return;
    }

    input.disabled = true;
    checkBtn.disabled = true;

    const questionData = quizData[gameState.currentCourse].modules[gameState.currentModule].questions[gameState.currentQuestionIndex];
    const isCorrect = userAnswer.toLowerCase() === questionData.answer.toLowerCase();
    processAnswer(isCorrect, input);
}

function processAnswer(isCorrect, element) {
    const questionData = quizData[gameState.currentCourse].modules[gameState.currentModule].questions[gameState.currentQuestionIndex];
    feedbackContainer.classList.remove('correct', 'wrong');
    explanationBtn.classList.add('hidden');

    if (isCorrect) {
        if (element.tagName === 'BUTTON') {
            element.classList.add('correct');
        } else { // input field
            element.style.borderColor = 'var(--color-success)';
            element.style.boxShadow = '0 0 15px var(--color-success)';
        }
        feedbackTitle.textContent = "إجابة موفقة!";
        feedbackText.textContent = "معلومة دقيقة وممتازة.";
        feedbackContainer.classList.add('correct', 'show');
        gameState.score++;
        playSound('correct');
    } else {
        if (element.tagName === 'BUTTON') {
            element.classList.add('wrong');
            // Highlight correct answer for MCQ
            document.querySelectorAll('.option-btn').forEach(btn => {
                if (btn.textContent.toLowerCase() === questionData.answer.toLowerCase()) {
                    btn.classList.add('correct'); // Show correct answer
                }
            });
        } else { // input field
            element.style.borderColor = 'var(--color-error)';
            element.style.boxShadow = '0 0 15px var(--color-error)';
        }
        gameState.attempts--;
        updateAttemptsDisplay();
        feedbackTitle.textContent = "إجابة غير صحيحة";
        feedbackText.textContent = `التصحيح: ${questionData.answer}`;
        explanationBtn.classList.remove('hidden');
        explanationBtn.onclick = () => {
            feedbackText.innerHTML = `<span style="font-weight:bold; color:white;">التوضيح الكامل:</span><br>${questionData.explanation}`;
        };
        feedbackContainer.classList.add('wrong', 'show');
        playSound('wrong');
    }

    progressBar.style.width = `${((gameState.currentQuestionIndex + 1) / quizData[gameState.currentCourse].modules[gameState.currentModule].questions.length) * 100}%`;
    setTimeout(nextStep, 4000);
}

function nextStep() {
    feedbackContainer.classList.remove('show');
    explanationBtn.classList.add('hidden');

    if (gameState.attempts === 0) {
        showCompletionScreen(true); // Lost all attempts
        return;
    }

    gameState.currentQuestionIndex++;
    const currentModuleData = quizData[gameState.currentCourse].modules[gameState.currentModule];
    if (gameState.currentQuestionIndex < currentModuleData.questions.length) {
        displayQuestion();
    } else {
        showCompletionScreen(false); // Module completed successfully
    }
}

async function showCompletionScreen(hasLost) {
    quizHud.classList.remove('active');
    appHeader.style.display = 'flex';
    const course = quizData[gameState.currentCourse];
    const module = course.modules[gameState.currentModule];
    const finalScore = (gameState.score / module.questions.length) * 20;
    const pointsWon = hasLost ? 0 : Math.round(finalScore * 1.5);

    gameState.totalAcademicPoints += pointsWon;
    academicPointsDisplay.textContent = gameState.totalAcademicPoints;

    // Level up logic
    if (gameState.totalAcademicPoints >= gameState.userLevel * 50) {
        gameState.userLevel++;
        document.querySelector('#user-level span').textContent = `المستوى ${gameState.userLevel}`;
        playSound('levelUp');
        showToast(`تهانينا! لقد وصلت إلى المستوى ${gameState.userLevel}!`, 5000, 'success');
    }

    if (!hasLost) {
        const moduleKeys = Object.keys(course.modules);
        const currentModuleIndex = moduleKeys.indexOf(gameState.currentModule);
        if (currentModuleIndex + 1 < moduleKeys.length) {
            const nextModuleKey = moduleKeys[currentModuleIndex + 1];
            if (!gameState.unlockedModules.includes(nextModuleKey)) {
                gameState.unlockedModules.push(nextModuleKey);
                showToast(`تم فتح الوحدة الجديدة: ${course.modules[nextModuleKey].name}!`, 4000, 'info');
            }
        }
    }

    await updateUserProgressOnServer(); // Save progress to mock backend

    document.getElementById('completed-module-name').textContent = module.name;
    document.getElementById('final-score-text').textContent = `علامتك النهائية: ${finalScore.toFixed(1)} / 20`;
    document.getElementById('points-won-text').textContent = `+${pointsWon} نقطة أكاديمية 📚`;

    certificateModal.classList.add('show');
    saveGameState();
}

function closeCertificate() {
    certificateModal.classList.remove('show');
    showScreen('academicPath');
}

// Initial call to set up the app
initializeApp();
